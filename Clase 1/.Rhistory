c=expand.grid(21,c2,c3) %>% filter(Var3!=21) %>%  unique()
rbind(a,b,c)
c2
c1
d = expand.grid(c1,c2,c3)
d
rbind(a,b,c,d)
193+387
c1 = c(14,70,53,59,21)       # valores de v1
c2 = c(11,21,56,18,15,26)    # valores de v2
a=expand.grid(21,21,c3) %>% filter(Var3!=21) %>%  unique()
c11 = c(14,70,53,59)       # valores de v1
b=expand.grid(c11,21,c3) %>% filter(Var3!=21) %>%  unique()
c22 = c(11,56,18,15,26)    # valores de v2
c=expand.grid(21,c22,c3) %>% filter(Var3!=21) %>%  unique()
rbind(a,b,c,d)
d = expand.grid(c1,c2,c3)
a=expand.grid(21,21,c3) %>% filter(Var3!=21) %>%  unique()
c11 = c(14,70,53,59)       # valores de v1
b=expand.grid(c11,21,c3) %>% filter(Var3!=21) %>%  unique()
c22 = c(11,56,18,15,26)    # valores de v2
c=expand.grid(21,c22,c3) %>% filter(Var3!=21) %>%  unique()
rbind(a,b,c,d)
677+193
expand.grid(c1,c2,c3)
333+537
rbind(a,b,c,d)
c3
c3[which(c3!=21)]
expand.grid(c1,c2,c3[which(c3!=21)])
477+333
expand.grid(c1,c2,c3[which(c3!=21)])
333+477
expand.grid(c1,c2,c3[which(c3!=21)]) %>% unique()
353+87
expand.grid(c11,c22,c3)
333+247
expand.grid(c11,c22,c3) %>%
filter(Var1!=Var2 & Var1!=Var3 & Var3!=Var2)
333+207
expand.grid(c11,c22,c3) %>%
filter(Var1!=Var2 & Var1!=Var3 & Var3!=Var2) %>%
Filter(Var3==21)
expand.grid(c11,c22,c3) %>%
filter(Var1!=Var2 & Var1!=Var3 & Var3!=Var2) %>%
filter(Var3==21)
expand.grid(c11,c22,c3) %>%
filter(Var1!=Var2 & Var1!=Var3 & Var3!=Var2) %>%
filter(Var3==21&Var1==59)
expand.grid(c11,c22,c3) %>%
filter(Var1!=Var2 & Var1!=Var3 & Var3!=Var2) %>%
filter(Var3==21) %>% unique()
expand.grid(c11,c22,c3) %>%
filter(Var1!=Var2 & Var1!=Var3 & Var3!=Var2) %>%
filter(Var3==21) %>% distinct()
expand.grid(c11,c22,c3) %>%
filter(Var1!=Var2 & Var1!=Var3 & Var3!=Var2)%>% distinct()
expand.grid(21,21,c3[which(c3!=21)])
expand.grid(c11,c22,c3) %>%
filter(Var1!=Var2 & Var1!=Var3 & Var3!=Var2) %>% distinct()
expand.grid(21,c22,c3[which(c3!=21)]) %>% distinct()
expand.grid(c11,21,c3[which(c3!=21)]) %>% distinct()
expand.grid(c11,c22,c3) %>%
filter(Var1!=Var2 & Var1!=Var3 & Var3!=Var2) %>% distinct()
expand.grid(21,c22,c3[which(c3!=21)]) %>% distinct()
distinct
expand.grid(c11,21,c3[which(c3!=21)]) %>% distinct()
expand.grid(c11,c22,21)
expand.grid(A_1,A_2,y[1:29]) %>%
filter(Var3 != 21) %>%
filter(Var2 != Var3, Var1 != Var3)
expand.grid(c11,c22,c3) %>%
filter(Var3 != 21) %>%
filter(Var2 != Var3, Var1 != Var3)
expand.grid(c1,c2,c3) %>%
filter(Var3 != 21) %>%
filter(Var2 != Var3, Var1 != Var3)
33+428
333+428
expand.grid(c1,c2,c3) %>%
filter(Var1 == 21, Var3 == 21, Var1 != Var2) %>%
unique()
761+49
expand.grid(c1,c2,c3[which(c3!=21)])
expand.grid(c1,c2,c3) %>%
filter(Var3 != 21) %>%
filter(Var2 != Var3, Var1 != Var3)
expand.grid(c1,c2,c3[which(c3!=21)]) %>%
filter(Var2 != Var3, Var1 != Var3)
expand.grid(c1,c2,c3) %>%
filter((Var1 == 21, Var3 == 21, Var1 != Var2)|
(Var2 == 21, Var3 == 21, Var1 != Var2)) %>%
unique()
expand.grid(c1,c2,c3) %>%
filter((Var1 == 21, Var3 == 21, Var1 != Var2)|
(Var2 == 21, Var3 == 21, Var1 != Var2)) %>%
unique()
expand.grid(c1,c2,c3) %>%
filter((Var1 == 21, Var3 == 21, Var1 != Var2)|
(Var2 == 21, Var3 == 21, Var1 != Var2)) %>%
unique()
expand.grid(c1,c2,c3) %>%
filter((Var1 == 21& Var3 == 21 & Var1 != Var2)|
(Var2 == 21 & Var3 == 21 & Var1 != Var2)) %>%
unique()
expand.grid(21,21,c3)
expand.grid(c1,c2,c3) %>%
filter((Var1 == 21 & Var3 == 21 & Var1 != Var2)|
(Var2 == 21 & Var3 == 21 & Var1 != Var2)) %>%
unique()
expand.grid(21,21,c3)
expand.grid(21,21,c3) %>% unique()
expand.grid(21,c2,21) %>% unique()
expand.grid(c1,21,21) %>% unique()
expand.grid(21,21,c3[which(c3!=21)]) %>% unique()
expand.grid(c1,c2,c3) %>%
filter(Var2 == 21, Var3 == 21, Var1 != Var2) %>%
unique()
expand.grid(c1,c2,c3) %>%
filter(Var1 != 21, Var2 != 21, Var1 != Var2,
Var3 == 21)
expand.grid(c11,c22,21) %>%
filter(Var1 != Var2)
expand.grid(c1,c2,c3) %>%
filter(Var1 != 21, Var2 != 21, Var1 != Var2,
Var3 == 21)
expand.grid(c1,c2,c3) %>%
filter(Var1 != 21, Var2 != 21, Var1 != Var2,
Var3 == 21)
expand.grid(c1,c2,c3) %>%
filter(Var1 != 21, Var2 != 21, Var1 != Var2,
Var3 == 21) %>% unique()
expand.grid(c11,c22,21) %>%
filter(Var1 != Var2)
expand.grid(c11,c22,21) %>%
filter(Var1 != Var2) %>%  unique()
expand.grid(c1,21,21) %>% unique()
expand.grid(c1,21,21)
expand.grid(21,c2,21)
expand.grid(21,c2,21)
expand.grid(21,c2,21)
expand.grid(c1,21,21)
expand.grid(c11,c22,21) %>% filter(Var1 != Var2)
com21.1 = expand.grid(21,c2,21)
com21.2 = expand.grid(c1,21,21)
com21.3 = expand.grid(c11,c22,21) %>% filter(Var1 != Var2)
com21=rbind(com21.,com21.2,comb21.3)
com21=rbind(com21.1,com21.2,comb21.3)
com21.1 = expand.grid(21,c2,21)
com21.2 = expand.grid(c1,21,21)
com21.3 = expand.grid(c11,c22,21) %>% filter(Var1 != Var2)
com21=rbind(com21.1,com21.2,comb21.3)
com21.1 = expand.grid(21,c2,21)
com21.2 = expand.grid(c1,21,21)
com21.3 = expand.grid(c11,c22,21) %>% filter(Var1 != Var2)
com21=rbind(com21.1,com21.2,comb21.3)
com21=rbind(com21.1,com21.2,com21.3)
com21
com21.1 = expand.grid(21,c22,21)
com21.2 = expand.grid(c11,21,21)
com21.3 = expand.grid(c11,c22,21) %>% filter(Var1 != Var2)
com21=rbind(com21.1,com21.2,com21.3)
com21
com21.4 =  expand.grid(21,21,c3[which(c3!=21)])
com21=rbind(com21.1,com21.2,com21.3)
com21
expand.grid(21,21,c3[which(c3!=21)])
com21=rbind(com21.1,com21.2,com21.3,com21.4)
com21.1 = expand.grid(21,c22,21)
com21.2 = expand.grid(c11,21,21)
com21.3 = expand.grid(c11,c22,21) %>% filter(Var1 != Var2)
com21.4 =  expand.grid(21,21,c3[which(c3!=21)]) %>%  unique()
com21=rbind(com21.1,com21.2,com21.3,com21.4)
com21
com = expand.grid(c1,c2,c3[which(c3!=21)]) %>%
filter(Var2 != Var3, Var1 != Var3)
com21.1 = expand.grid(21,c22,21)
com21.2 = expand.grid(c11,21,21)
com21.3 = expand.grid(c11,c22,21) %>% filter(Var1 != Var2)
com21.4 =  expand.grid(21,21,c3[which(c3!=21)]) %>%  unique()
com21=rbind(com21.1,com21.2,com21.3,com21.4,com)
com21
290+471
com = expand.grid(c1,c2,c3[which(c3!=21)]) %>%
filter(Var1 != Var2)
com
333+450
783+29
com = expand.grid(c11,c22,c3[which(c3!=21)]) %>%
filter(Var1 != Var2)
com
333+207
com21
290+471
com21=rbind(com21.1,com21.2,com21.3)
com21
expand.grid(c1,c2,) %>%
filter((Var1 == 21 & Var3 == 21 & Var1 != Var2)|
(Var2 == 21 & Var3 == 21 & Var1 != Var2)) %>%
unique()
expand.grid(c1,c2,c3) %>%
filter(Var3 != 21) %>%
filter(Var2 != Var3, Var1 != Var3)
333+428+29
expand.grid(c1,c2,c3) %>%
filter(Var1 != 21, Var2 != 21, Var1 != Var2,
Var3 == 21)
com21.1 = expand.grid(21,c22,21)
com21.2 = expand.grid(c11,21,21)
com21.3 = expand.grid(c11,c22,21) %>% filter(Var1 != Var2)
com21=rbind(com21.1,com21.2,com21.3)
expand.grid(c1,c2,c3[which(c3!=21)]) %>%
filter(Var2 != Var3, Var1 != Var3)
com = expand.grid(c1,c2,c3[which(c3!=21)]) %>%
filter(Var2 != Var3, Var1 != Var3)
com21.1 = expand.grid(21,c22,21)
com21.2 = expand.grid(c11,21,21)
com21.3 = expand.grid(c11,c22,21) %>% filter(Var1 != Var2)
com21.4 = expand.grid(21,21,c3[which(c3!=21)]) %>%  unique()
com21=rbind(com21.1,com21.2,com21.3,com21.4)
dim(com)
dim(com21)
761+43
com21.1 = expand.grid(21,c22,21)
com21.1
com21.2
com21.3
com21.4
dim(com)
dim(com21)
dim(com)[1]+dim(com21)[1]
com = expand.grid(c1,c2,c3[which(c3!=21)]) %>%
filter(Var2 != Var3, Var1 != Var3)
com
expand.grid(c1,c2,c3) %>%
filter(Var3 != 21) %>%
filter(Var2 != Var3, Var1 != Var3)
com21.1 = expand.grid(21,c22,21)
com21.1
com21.2
()
expand.grid(c1,c2,c3) %>%
filter(Var1 == 21, Var3 == 21, Var1 != Var2) %>%
unique()
expand.grid(c1,c2,c3) %>%
filter(Var2 == 21, Var3 == 21, Var1 != Var2) %>%
unique()
expand.grid(c1,c2,c3) %>%
filter(Var1 != 21, Var2 != 21, Var1 != Var2,
Var3 == 21)
com21.4 = expand.grid(21,21,c3[which(c3!=21)]) %>%  unique()
com21.4
com21.3
com21.3 = expand.grid(c11,c22,c(21,21)) %>% filter(Var1 != Var2) # es doble pues hay 2 21
com21.3
com21.1 = expand.grid(21,c22,21)
com21.2 = expand.grid(c11,21,21)
com21.3 = expand.grid(c11,c22,c(21,21)) %>% filter(Var1 != Var2) # es doble pues hay 2 21
com21.4 = expand.grid(21,21,c3[which(c3!=21)]) %>%  unique()
com21=rbind(com21.1,com21.2,com21.3,com21.4)
dim(com)[1]+dim(com21)[1]
com = expand.grid(c1,c2,c3[which(c3!=21)]) %>%
filter(Var2 != Var3, Var1 != Var3)
com
com21.1
com21.2
com21.3
com21.4
com21=rbind(com21.1,com21.2,com21.3)
dim(com)[1]+dim(com21)[1]
com21 %>% filter(Var1==21 & Var2==21)
expand.grid(c1,c2,c3) %>%
filter(Var3 != 21 & Var2 != 21 & Var3 != 21) %>%
filter(Var2 != Var3, Var1 != Var3)
expand.grid(c1,c2,c3) %>%
filter(Var3 != 21 & Var2 != 21 & Var1 != 21) %>%
filter(Var2 != Var3, Var1 != Var3)
expand.grid(c1,c2,c3) %>%
filter(Var3 != 21) %>%
filter(Var2 != Var3, Var1 != Var3)
expand.grid(c1,c2,c3) %>%
filter(Var3 != 21) %>%
filter(Var2 != Var3 & Var1 != Var3) %>%
filter(Var1 == 21, Var2 == 21)
com = expand.grid(c11,c22,c3[which(c3!=21)]) %>%
filter(Var2 != Var3)
com
c1
c2
com = expand.grid(c1,c2,c3[which(c3!=21)]) %>%
filter(Var2 != Var3, Var1 != Var3)
com
expand.grid(c11,c22,c3[which(c3!=21)])
c11
c22
com = expand.grid(c1,c2,c3[which(c3!=21)]) %>%
filter(Var1 != Var3, Var2 != Var3)
com = expand.grid(c1,c2,c3[which(c3!=21)]) %>%
filter(Var1 != Var3, Var2 != Var3) # aqui se incluyen las combinaciones 21-21-XX
com21.1 = expand.grid(21,c22,21)
com21.2 = expand.grid(c11,21,21)
com21.3 = expand.grid(c11,c22,c(21,21)) %>% filter(Var1 != Var2) # es doble pues hay 2 21
com21=rbind(com21.1,com21.2,com21.3)
dim(com)[1]+dim(com21)[1]
dim(datos810)
com = expand.grid(c1,c2,c3[which(c3!=21)]) %>%
filter(Var1 != Var3, Var2 != Var3) # aqui se incluyen las combinaciones 21-21-XX
com21.1 = expand.grid(21,c22,21)
com21.2 = expand.grid(c11,21,21)
com21.3 = expand.grid(c11,c22,c(21,21)) %>% filter(Var1 != Var2) # es doble pues hay 2 21
datos810 = rbind(com,com21.1,com21.2,com21.3)
dim(datos810)
datos810
dim(datos810)
c11 = c1[which(c1!=21)]       # quitamos el 21
c22 = c2[which(c2!=21)]    # quitamos el 21
c33 = c3[which(c3!=21)]  # quitamos el 21
com = expand.grid(c1,c2,c33) %>%
filter(Var1 != Var3, Var2 != Var3) # aqui se incluyen las combinaciones 21-21-XX
com21.1 = expand.grid(21,c22,21)
com21.2 = expand.grid(c11,21,21)
com21.3 = expand.grid(c11,c22,c(21,21)) %>% filter(Var1 != Var2) # es doble pues hay 2 21
datos810 = rbind(com,com21.1,com21.2,com21.3)
dim(datos810)
getwd()
setwd()
lista = list(a=c(1,2),b=c("a","b"))
lista
name(lista$a)<-hola
name(lista$a)<-"hola"
rename(lista$a)<-"hola"
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(dpi=300,fig.width=7)
library(xaringanthemer)
write_xaringan_theme(text_bold_color = "black",
code_font_size = "0.9em", #   code_font_size = "0.55em",
text_font_google  = google_font("Fira Sans","300", "300i"),
header_font_google = google_font("Fira Sans"),
code_font_google   = google_font("Droid Mono"),
text_slide_number_color = "grey",
code_highlight_color = "#D0ECE7",
background_color = "#FFFFFF",
header_color = "black",
inverse_background_color = "#0D6F4E",
header_h1_font_size = "48px",
header_h2_font_size = "35px",
header_h3_font_size = "25px",
padding = "1em 2em 1em 2em")
knitr::include_graphics("img/RyRstudio.png")
knitr::include_graphics("img/RStudio_interfaz.png")
vec <- c(1,4,3.14,-2)  # <- es equivalente a usar =
vec
length(vec)
c(0.5,2) + c(1,2,3,4)
c(0.5,2,0.5,2) + c(1,2,3,4)
2 * c(1,-2,3) + 1
c(0.5,2) + c(4,-1,10)
#Sobre cada elemento
c(1,2,3)^2
# Sobre todo el vector
sum(c(3,2,6))
ph <- c(1.1,3.0,4.2,0.7,7.1,8,5.6,13.3,12.0)
z <- (ph - mean(ph)) / sd(ph) # z = ph estandarizado
round(z, 2)                # redondeamos a 2 decimales
seq(-2, 5, by = 1.75) # secuencia desde  -2 a 5, incrementos de 1.75
# seq(-2,5,length.out = 5) se obtiene lo mismo.
rep(c(-1, 0, 1), times = 3) # repetir c(-1,0,1) 3 veces
rep(c(-1, 0, 1), each = 3) # repetir cada elemento 3 veces
n <- 12
1:n
# creamos un factor con tres niveles, a, b y c
mi.factor <- factor( sample( letters[1:3], 20, replace = T ) )
mi.factor
levels( mi.factor )    # a, b, c
# preferimos la ordenación b, c, a
mi.factor <- factor( mi.factor,
levels = levels( mi.factor )[ c( 2,3,1 ) ] )
levels( mi.factor )     # b, c, a
first_names <- c("Pedro", "Catalina", "Roberto","Andrea")
name_lengths <- nchar(first_names) # numero de caracteres
name_lengths
name_lengths >= 4
largo <- name_lengths > 6
largo
# substr: substring (porción) de un char vector
letra.4 <- substr(first_names, start=4, stop=4) == "r"
letra.4
largo  & letra.4
largo  | letra.4
!largo
!(largo  & letra.4 )
# Obteniendo los nombres con largo mayor a 6
first_names[largo]
# Si tenemos un vector con los sexos
sex <- c("M","F","M","F")
first_names[sex=="M"]        # para comparar usar doble signo = (==)
# Veamos si nuestra lista coincide en algun nombre con este vector
first_names %in% c("Roberto", "Carla", "Daniel")
# Obtenemos la posición dentro de nuestro vector
which(first_names %in% c("Roberto", "Carla", "Daniel"))
# Veamos cual es el que coincide
first_names[3]
# un vector con valores NA
vector_conNA <- c(1,2,NA,4,-3,NA,NA,-4)
mean(vector_conNA)
mean(vector_conNA, na.rm=TRUE)
# Para ver la posición de los valores NA
is.na(vector_conNA)
vector_conNA == -3
vector_conNA %in% -3
vector_conNA %in% NA
# Como funcionan los Inf y NaN
vec <- c(-2, -1, 0, 1, 2) / 0 ; vec
rbind(is.finite(vec),is.nan(vec))
(a_matrix <- matrix(letters[1:8], nrow=2, ncol=4))
(b_matrix <- matrix(letters[1:8], nrow=2, ncol=4, byrow=TRUE))
# empalmando vectores por fila
(c_matrix <- rbind(c(2,4,6),c(-1,0,-3)))
# empalmando vectores por columna
(c_matrix <- cbind(c(1, 2,5,3), c(3, 4), c(5, 6)))
a_matrix
# extraer la fila 2
a_matrix[2,]
# extraer la columna 3
a_matrix[2,]
# primer valor es la cantidad de filas y el otro valor las columnas.
dim(a_matrix)
matrix <- cbind(c("SI","NO"), c(18,31))
# nombramos las filas y columnas
rownames(matrix) <- c("Pedro", "Carla")
colnames(matrix) <- c("Fuma", "Edad")
matrix
typeof(matrix)
(mi.lista <- list("letras"      = letters[1:4],
"matriz"      = matrix(8:11, nrow = 2),
"resultados"  = lm(dist ~ speed, data = cars)))
mi.lista[["letras"]]
mi.lista$letras
mi.lista[[1]]
lista
library(reshape)
rename(lista,c(a="aa"))
#Actividad2
## carga de los datos NO MODIFICAR
Encuesta <- read_excel("/Volumes/GoogleDrive/Mi unidad/Doctorado/Diplomado DS/Curso INE/Clases_INE/Clase 1/datasets/Encuesta.xlsx")
##
library(readxl)
#Actividad2
## carga de los datos NO MODIFICAR
Encuesta <- read_excel("/Volumes/GoogleDrive/Mi unidad/Doctorado/Diplomado DS/Curso INE/Clases_INE/Clase 1/datasets/Encuesta.xlsx")
names(Encuesta)
table(P94)
# 1. Usar "seq()" para crear un vector de 10 números con espacio desde 1.2 a 12.
vec_num <- seq(1.2,12,1.2)
# 2. Usar ":" para crear un vector de valores enteros entre el 31 y 40
vec_int <- 31:40
# 3. Usar "LETTERS" ,"[ ]" y "c()" para crear un vector con 9 letras comenzando desde la "C" y que además contenga la "Z"
vec_cha <- LETTERS[c(3:11,26)]
#4. Usar "letters" y "[ ]"para crear un vector factor con las primeras 10 letras minusculas.
vec_fac <- letters[1:10]
# 5. Combinar los vectores obtenidos en (3) y (4) usando "c()". No convertir a factor.
vec_let <- c(vec_cha,vec_fac)
# 6. combinar usando "c()" y "[ ]" los primero 4 elemento de "vec_num" con los ultimos 4 elementos de "vec_int"
vec_ni <- c(vec_num[1:4],vec_int[7:10])
# 7) Usar "rev()" para revertir el orden del vector obtenido en (4).
fac_vec <- rev(vec_fac)
# 1. Crear una matriz con 10 filas  y 4 columnas llenas de NA usando "matrix()"
mat.0<- matrix(NA,10,4,byrow=T)
# 2. Asignar "vec_num" a la primera columna de "mat_1"
mat_1 <- mat.0 # no editar
mat_1[,1] <- vec_num
# 3. Asignar "vec_int" a la ultima columna de mat_2
mat_2 <- mat_1 # no editar
mat_2[,4] <- vec_int
# 4. Asignar "vec_cha" y "vec_fac" a las restantes columnas de "mat_2" para obtener "mat_3".
mat_3 <- mat_2 # no editar.
mat_3[,c(2,3)] <- cbind(vec_cha,vec_fac)
# 5. Selecionar la sexta fila de la matriz y guardar en "fila_6" como vector.
fila_6 <- mat_3[6,]
# 6. extraer el elemento asignado en la fila 5 y columna 3 como valor numerico.
valor_5.3 <- mat_3[5,3]
# 7. Usando "cbind()" combinar "vec_num", "vec_int", "vec_cha", and "vec_fac" into "mat_4".
mat_4 <- cbind(vec_num,vec_int,vec_cha,vec_fac)
# 7.1. Reordenar las columnas de "mat_4" para que sea igual a "mat_3"
mat_ord<- mat_4[,c(1,3,4,2)]
# 8. Trasponer la matriz "mat_ord"y extraer solo las primeras 4 columnas y guardar en "mat_t"
mat_t <- t(mat_ord)[,1:4]
# 9. Usar rbind() y añadir mat_t a mat_ord
mat_final <- rbind(mat_ord,mat_t)
# Extra:
rownames(mat_final) <- NULL
mat_final
setwd("/Volumes/GoogleDrive/Mi unidad/Doctorado/Diplomado DS/Curso INE/Clases_Santander/Clase 1")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(dpi=300,fig.width=7)
girls_1988 <- filter(babynames, year == 1988, sex == "F")
babynames <- read.csv("/Volumes/GoogleDrive/Mi unidad/Doctorado/Diplomado DS/Curso INE/Clases_INE/Clase 2/datasets/babynames.csv")
girls_1988 <- filter(babynames, year == 1988, sex == "F")
babynames
filter(babynames, year == 1988, sex == "F")
filter(babynames, year == 1988, sex == "F")
babynames
library(dplyr)
filter(babynames, year == 1988, sex == "F")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(dpi=300,fig.width=7)
girls_1988 <- filter(babynames, year == 1988, sex == "F")
library(dplyr)
girls_1988 <- dplyr::filter(babynames, year == 1988, sex == "F")
girls_1988 <- select(girls_1988, name, n)
girls_1988 <- arrange(girls_1988, desc(n))
head(girls_1988,2)
